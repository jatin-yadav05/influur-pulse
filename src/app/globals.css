@import "tailwindcss";
/* @import "tw-animate-css"; */

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  @keyframes gradient-rotate {
  from {
    --gradient-angle: 0deg;
    }
  to {
    --gradient-angle: 360deg;
    }
  }
}
@font-face {
  font-family: 'Duplet Open';
  src: url('/fonts/Duplet-Regular-BF642a340663b06.otf') format('opentype');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Duplet Open';
  src: url('/fonts/Duplet-Bold-BF642a3406582e7.otf') format('opentype');
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

/* Optional: set default font globally */
body {
  font-family: 'Duplet Open', sans-serif;
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@keyframes spin-slow {
  0% { transform: rotate(0deg);}
  100% { transform: rotate(360deg);}
}
.group-hover\:animate-spin-slow:hover {
  animation: spin-slow 1.5s linear infinite;
}

@keyframes border-trail {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 94, 0, 0.5), 0 0 0 0 rgba(255, 0, 0, 0.3);
  }
  50% {
    box-shadow: 0 0 0 6px rgba(255, 94, 0, 0.15), 0 0 0 12px rgba(255, 0, 0, 0.08);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(255, 94, 0, 0.5), 0 0 0 0 rgba(255, 0, 0, 0.3);
  }
}
.group:hover .group-hover\\:animate-border-trail {
  animation: border-trail 1.2s cubic-bezier(0.4,0,0.2,1) infinite;
}

:root {
  --hue1: 24; /* Orange hue */
  --hue2: 32; /* Slightly different orange for accent */
  --border: 1px;
  --border-color: hsl(var(--hue2), 12%, 25%);
  --radius: 22px;
  --ease: cubic-bezier(0.5, 1, 0.89, 1);
}

#menu {
  visibility: hidden;
  pointer-events: none;
  transition-property: visibility, opacity, filter;
  transition-duration: 0s, 0.25s, 0.25s, 0.25s;
  transition-delay: 0.5s, 0s, 0s, 0s;
  transition-timing-function: var(--ease);
  filter: blur(4px);
  color: #737985;
  position: fixed;
  top: 140px;
  left: 2svw;
  border-radius: var(--radius);
  border: var(--border) solid var(--border-color);
  box-shadow: hsl(var(--hue2) 50% 2%) 0px 10px 16px -8px, hsl(var(--hue2) 50% 4%) 0px 20px 36px -14px;
}

#menu:not(.open)::before,
#menu:not(.open)::after,
#menu:not(.open) .glow {
  opacity: 0;
  pointer-events: none;
  animation: glowoff 0.25s var(--ease) both;
}

#menu.open {
  visibility: visible;
  opacity: 1;
  pointer-events: auto;
  transition-delay: 0s;
  filter: blur(0px);
  position: static; /* Make menu scrollable instead of fixed */

  &::before,
  &::after,
  & .glow,
  & .shine {
      animation: glow 1s var(--ease) both;
  }

  & .shine {
      animation-delay: 0s;
      animation-duration: 2s;
  }

  & .glow {
      animation-delay: 0.2s;
  }

  & .glow-bright {
      animation-delay: 0.1s;
      animation-duration: 1.5s;
  }

  & .shine-bottom {
      animation-delay: 0.1s;
      animation-duration: 1.8s;
  }

  & .glow-bottom {
      animation-delay: 0.3s;
  }

  & .glow-bright.glow-bottom {
      animation-delay: 0.3s;
      animation-duration: 1.1s;
  }
}

#menu .shine,
#menu .glow {
  --hue: var(--hue1);
}

#menu .shine-bottom,
#menu .glow-bottom {
  --hue: var(--hue2);
  --conic: 135deg;
}

#menu .shine,
#menu .shine::before,
#menu .shine::after {
  pointer-events: none;
  border-radius: 0;
  border-top-right-radius: inherit;
  border-bottom-left-radius: inherit;
  border: 1px solid transparent;
  width: 75%;
  height: auto;
  min-height: 0px;
  aspect-ratio: 1;
  display: block;
  position: absolute;
  right: calc(var(--border) * -1);
  top: calc(var(--border) * -1);
  left: auto;
  z-index: 1;
  --start: 12%;
  background: conic-gradient(from var(--conic, -45deg) at center in oklch,
          transparent var(--start, 0%), hsl(var(--hue), var(--sat, 80%), var(--lit, 60%)), transparent var(--end, 50%)) border-box;
  mask:
      linear-gradient(transparent),
      linear-gradient(black);
  mask-repeat: no-repeat;
  mask-clip: padding-box, border-box;
  mask-composite: subtract;
}

#menu .shine::before,
#menu .shine::after {
  content: "";
  width: auto;
  inset: -2px;
  mask: none;
}

#menu .shine::after {
  z-index: 2;
  --start: 17%;
  --end: 33%;
  background: conic-gradient(from var(--conic, -45deg) at center in oklch,
          transparent var(--start, 0%), hsl(var(--hue), var(--sat, 80%), var(--lit, 85%)), transparent var(--end, 50%));
}

#menu .shine-bottom {
  top: auto;
  bottom: calc(var(--border) * -1);
  left: calc(var(--border) * -1);
  right: auto;
}

#menu .glow {
  pointer-events: none;
  border-top-right-radius: calc(var(--radius) * 2.5);
  border-bottom-left-radius: calc(var(--radius) * 2.5);
  border: calc(var(--radius) * 1.25) solid transparent;
  inset: calc(var(--radius) * -2);
  width: 75%;
  height: auto;
  min-height: 0px;
  aspect-ratio: 1;
  display: block;
  position: absolute;
  left: auto;
  bottom: auto;
  mask: url('https://assets.codepen.io/13471/noise-base.png');
  mask-mode: luminance;
  mask-size: 29%;
  opacity: 1;
  filter: blur(12px) saturate(1.25) brightness(0.5);
  mix-blend-mode: plus-lighter;
  z-index: 3;

  &.glow-bottom {
      inset: calc(var(--radius) * -2);
      top: auto;
      right: auto;
  }

  &::before,
  &::after {
      content: "";
      position: absolute;
      inset: 0;
      border: inherit;
      border-radius: inherit;
      background: conic-gradient(from var(--conic, -45deg) at center in oklch,
              transparent var(--start, 0%), hsl(var(--hue), var(--sat, 95%), var(--lit, 60%)), transparent var(--end, 50%)) border-box;
      mask:
          linear-gradient(transparent),
          linear-gradient(black);
      mask-repeat: no-repeat;
      mask-clip: padding-box, border-box;
      mask-composite: subtract;
      filter: saturate(2) brightness(1);
  }

  &::after {
      --lit: 70%;
      --sat: 100%;
      --start: 15%;
      --end: 35%;
      border-width: calc(var(--radius) * 1.75);
      border-radius: calc(var(--radius) * 2.75);
      inset: calc(var(--radius) * -0.25);
      z-index: 4;
      opacity: 0.75;
  }
}

#menu .glow-bright {
  --lit: 80%;
  --sat: 100%;
  --start: 13%;
  --end: 37%;
  border-width: 5px;
  border-radius: calc(var(--radius) + 2px);
  inset: -7px;
  left: auto;
  filter: blur(2px) brightness(0.66);

  &::after {
      content: none;
  }

  &.glow-bottom {
      inset: -7px;
      right: auto;
      top: auto;
  }
}

@property --item-opacity {
  syntax: "<number>";
  inherits: false;
  initial-value: 0;
}

body {
  background: #08090d;
  background-size: cover;
  background-position: center;
  background-blend-mode: hard-light;
  padding: 0;
  min-height: 100svh;
}




